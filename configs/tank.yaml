name: "Generation"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-multiview-control-depth"
data:
  batch_size: [5,5] # must be dividable by n_view
  n_view: 4
  # 0-4999: 64x64, >=5000: 256x256
  width: [64, 256]
  height: [64, 256]
  resolution_milestones: [5000]
  camera_distance_range: [3.0, 3.0] # not relative
  fovy_range: [30, 60]
  relative_radius: false
  elevation_range: [0,30]
  sketch_fovy: 40
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  n_val_views: 4
  eval_camera_distance: 3.0
  eval_fovy_deg: 40.
  # control condition
  azimuth_input: 45.0
  eval_elevation_deg: 15.0
  sketch_path: "./assert/tank.png"
  mask_path: "./assert/tank_rgba.png"
  depth_path: "./assert/tank_depth.npy"
  # progressive_until: 1000
  azimuth_range: [-45.0, 45.0]

system_type: "sketch-dream-generation"
system:
  Diffusion_2D_prob: [10000, 0, 0.9, 10100]

  lucid_guidance_type: "lucid-dreamer-guidance"
  lucid_guidance:
    model_key: "stabilityai/stable-diffusion-2-base"

  lucid_prompt_processor_type: "lucid-dreamer-prompt-processor"
  lucid_prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-base"
    text: 'a DSLR of a realistic camouflage tank'
    negative: 'unrealistic, blurry, low quality, out of focus, ugly, low contrast, dull, low-resolution, oversaturation.'
    inverse_text: ''

  geometry_type: "implicit-volume"
  geometry:
    radius: 1.0
    normal_type: analytic # null  

    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096

  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 5000
    textureless_prob: 0.5
    ambient_light_color: [1.0, 1.0, 1.0]
    diffuse_light_color: [0.0, 0.0, 0.0]
    soft_shading: true
    albedo_activation: sigmoid

  background_type: "solid-color-background"
  background:
    color: [0.5, 0.5, 0.5]
    random_aug: true
    share_aug_bg: true

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "highlight, ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions"
    front_threshold: 30.
    back_threshold: 30.

  guidance_type: "multiview-control-diffusion-guidance"
  guidance:
    model_name: "./mvdream_control/models/cldm_mv_v21.yaml"
    ckpt_path: "./models/epoch=9_step=30000.ckpt" # path to a pre-downloaded checkpoint file (null for loading from URL)
    guidance_scale: 50.0
    min_step_percent: [0, 0.98, 0.02, 8000]  # (start_iter, start_val, end_val, end_iter)
    max_step_percent: [0, 0.98, 0.50, 8000]
    recon_loss: true 
    recon_std_rescale: 0.5

    control_scale: 1.0
    four_view: true

  loggers:
    wandb:
      enable: false
      project: "threestudio"

  loss:
    lambda_lucid: 1.
    lambda_sds: 1.
    lambda_mask: [0, 500., 100., 8000]
    lambda_orient: [0, 50., 2000., 5000]
    lambda_sparsity: 0.
    lambda_opaque: 0.
    lambda_z_variance: 0.
  
  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry.encoding:
        lr: 0.01
      geometry.density_network:
        lr: 0.001
      geometry.feature_network:
        lr: 0.001
      background:
        lr: 0.001

trainer:
  max_steps: 12000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 16

checkpoint:
  save_last: true
  save_top_k: -1
  every_n_train_steps: 2500
